from langchain_openai import ChatOpenAI

from app.config import settings
from app.models.users import ChatHistory
from app.services.db_crud import save_chat_history


def summarize_doc(doc_id: str, document_content: str, query: str, chat_history: ChatHistory) -> str:
    """
        Summarizes a document based on the provided content, query, and chat history.

        Args:
            doc_id (str): The UUID of the document to be summarized.
            document_content (str): The content of the document to be summarized.
            query (str): The query to be answered based on the document content and chat history.
            chat_history (ChatHistory): A list of dictionaries containing the chat history with keys 'user_input' and 'response'.

        Returns:
            str: The response generated by the OpenAI model based on the provided inputs.
    """
    chat = ChatOpenAI(api_key=settings.OPENAI_API_KEY, model=settings.OPENAI_MODEL)
    history_context = "\n".join(
        f"User: {history['user_input']}\nBot: {history['response']}" for history in chat_history)
    complete_prompt = f"""
    Here is the document context:
    {document_content}

    Based on the following conversation history:
    {history_context}

    Please provide an answer to the following query: {query}"""
    response = chat.call_as_chain(instruction=complete_prompt)
    save_chat_history(doc_id, {"user_input": query, "response": response})
    return response
